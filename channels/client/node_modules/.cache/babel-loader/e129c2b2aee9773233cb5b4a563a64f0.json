{"ast":null,"code":"import _classCallCheck from \"/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/src/components/streams/StreamShow.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nvar StreamShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamShow, _React$Component);\n\n  function StreamShow() {\n    _classCallCheck(this, StreamShow);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamShow).apply(this, arguments));\n  }\n\n  _createClass(StreamShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var _this$props$stream = this.props.stream,\n          title = _this$props$stream.title,\n          description = _this$props$stream.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return StreamShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/Users/xinqiu_1308/Desktop/courses/React_Redux/channels/client/src/components/streams/StreamShow.js"],"names":["React","connect","fetchStream","StreamShow","props","match","params","id","stream","title","description","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;;IAEMC,U;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWF,WAAX,CAAuB,KAAKE,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAEQ;AACL,UAAG,CAAC,KAAKH,KAAL,CAAWI,MAAf,EAAuB;AACnB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AAHI,+BAK0B,KAAKJ,KAAL,CAAWI,MALrC;AAAA,UAKGC,KALH,sBAKGA,KALH;AAAA,UAKUC,WALV,sBAKUA,WALV;AAOL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CAFJ,CADJ;AAMH;;;;EAlBoBV,KAAK,CAACW,S;;AAqB/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SAAO;AAAEN,IAAAA,MAAM,EAAEK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAACW,eAAD,EAAkB;AAAEV,EAAAA,WAAW,EAAXA;AAAF,CAAlB,CAAP,CAA0CC,UAA1C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\nclass StreamShow extends React.Component {\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render() {\n        if(!this.props.stream) {\n            return <div>Loading...</div>;\n        }\n\n        const { title, description } = this.props.stream;\n\n        return (\n            <div>\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, { fetchStream })(StreamShow);"]},"metadata":{},"sourceType":"module"}